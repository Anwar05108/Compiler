line number1: type_specifier : INT

int

line number2: type_specifier : INT

int

line number2: declaration_list: ID 

i

line number2: declaration_list: declaration_list COMMA ID 

i,a

line number2: variable_declaration: type_specifier declaration_list SEMICOLON 

int i,a;

line number2: statement : variable_declaration

int i,a;

line number2: statement_list : statement

int i,a;

line number5: variable : ID

i

line number5: factor : variable

i

line number5: unary_expression : factor

i

line number5: term : unary_expression

i

line number5: simple_expression : term

i

line number5: variable : ID

a

line number5: factor : variable

a

line number5: unary_expression : factor

a

line number5: term : unary_expression

a

line number5: simple_expression : term

a

line number5: expression : simple_expression RELOP simple_expression

i<a

line number5: logic_expression : rel_expression

i<a

line number5: expression : logic expression

i<a

line number7: argument_list :



line number7: factor : ID LPAREN argument_list RPAREN

println (  )

line number7: unary_expression : factor

println (  )

line number7: term : unary_expression

println (  )

line number7: simple_expression : term

println (  )

line number7: expression : simple expression

println (  )

line number7: logic_expression : rel_expression

println (  )

line number7: expression : logic expression

println (  )

line number7: expression_statement : expression SEMICOLON

println (  );

line number7: statement : expression_statement

println (  );

line number7: statement_list : statement

println (  );

line number8: compound_statement : LCURL statement_list RCURL

{
println (  );
}

print all scopes
 ScopeTable: 1.1.1

 ScopeTable: 1.1

7--> < a ,ID >
15--> < i ,ID >
 ScopeTable: 1

16--> < main ,ID >
line number8: statement : compound_statement

{
println (  );
}

line number11: argument_list :



line number11: factor : ID LPAREN argument_list RPAREN

println (  )

line number11: unary_expression : factor

println (  )

line number11: term : unary_expression

println (  )

line number11: simple_expression : term

println (  )

line number11: expression : simple expression

println (  )

line number11: logic_expression : rel_expression

println (  )

line number11: expression : logic expression

println (  )

line number11: expression_statement : expression SEMICOLON

println (  );

line number11: statement : expression_statement

println (  );

line number11: statement_list : statement

println (  );

line number12: compound_statement : LCURL statement_list RCURL

{
println (  );
}

print all scopes
 ScopeTable: 1.1.2

 ScopeTable: 1.1

7--> < a ,ID >
15--> < i ,ID >
 ScopeTable: 1

16--> < main ,ID >
line number12: statement : compound_statement

{
println (  );
}

line number12: statement : IF LPAREN expression RPAREN statement ELSE statement

if(i<a){
println (  );
}else{
println (  );
}

line number12: statement_list : statement_list statement

int i,a;
if(i<a){
println (  );
}else{
println (  );
}

line number19: compound_statement : LCURL statement_list RCURL

{
int i,a;
if(i<a){
println (  );
}else{
println (  );
}
}

print all scopes
 ScopeTable: 1.1

7--> < a ,ID >
15--> < i ,ID >
 ScopeTable: 1

16--> < main ,ID >
line number19: func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main ( ) {
int i,a;
if(i<a){
println (  );
}else{
println (  );
}
}


line number19: unit: function_definition 

int main ( ) {
int i,a;
if(i<a){
println (  );
}else{
println (  );
}
}


line number19: program:  unit 

int main ( ) {
int i,a;
if(i<a){
println (  );
}else{
println (  );
}
}


line number19: MAIN PROC
MOV AX, @DATA
MOV DS, AX
mov ax, temp_0
	cmp ax, 0
	je label_0
jmp label_1
label_0: 
label_1: 
MOV AX, 4C00h
INT 21h
MAIN ENDP
END MAIN

start: program
print all scopes
 ScopeTable: 1

16--> < main ,ID >
total no. of errors: 2
total no. of lines19
