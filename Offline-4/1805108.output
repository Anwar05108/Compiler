Terminals unused in grammar

    NEWLINE
    NUMBER
    LESS
    GREATER
    EQUAL
    BREAK
    CONTINUE
    CASE
    DEFAULT
    SWITCH
    DO
    LOGICNOT
    COLON
    CHAR
    PLUS
    MINUS
    SLASH
    ASTERISK
    BITOP
    CONST_CHAR


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: variable_declaration
    5     | function_declaration
    6     | function_definition

    7 function_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON
    8                     | type_specifier ID LPAREN RPAREN SEMICOLON

    9 $@1: ε

   10 function_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement

   11 $@2: ε

   12 function_definition: type_specifier ID LPAREN RPAREN $@2 compound_statement

   13 parameter_list: parameter_list COMMA type_specifier ID
   14               | parameter_list COMMA type_specifier
   15               | type_specifier ID
   16               | type_specifier

   17 compound_statement: LCURL statement_list RCURL
   18                   | LCURL RCURL

   19 variable_declaration: type_specifier declaration_list SEMICOLON

   20 type_specifier: INT
   21               | FLOAT
   22               | DOUBLE
   23               | VOID

   24 declaration_list: declaration_list COMMA ID
   25                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   26                 | ID
   27                 | ID LTHIRD CONST_INT RTHIRD

   28 statement_list: statement
   29               | statement_list statement

   30 statement: variable_declaration
   31          | expression_statement

   32 $@3: ε

   33 statement: $@3 compound_statement
   34          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   35          | WHILE LPAREN expression RPAREN statement
   36          | IF LPAREN expression RPAREN statement
   37          | IF LPAREN expression RPAREN statement ELSE statement
   38          | RETURN expression SEMICOLON
   39          | PRINTLN LPAREN ID RPAREN SEMICOLON

   40 expression_statement: SEMICOLON
   41                     | expression SEMICOLON

   42 variable: ID
   43         | ID LTHIRD expression RTHIRD

   44 expression: logic_expression
   45           | variable ASSIGNOP logic_expression

   46 logic_expression: rel_expression
   47                 | rel_expression LOGICOP rel_expression

   48 rel_expression: simple_expression
   49               | simple_expression RELOP simple_expression

   50 simple_expression: term
   51                  | simple_expression ADDOP term

   52 term: unary_expression
   53     | term MULOP unary_expression

   54 unary_expression: ADDOP unary_expression
   55                 | NOT unary_expression
   56                 | factor

   57 factor: variable
   58       | ID LPAREN argument_list RPAREN
   59       | LPAREN expression RPAREN
   60       | CONST_INT
   61       | CONST_FLOAT
   62       | variable INCOP
   63       | variable DECOP

   64 argument_list: arguments
   65              | ε

   66 arguments: arguments COMMA logic_expression
   67          | logic_expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    VOID (258) 23
    NEWLINE (259)
    NUMBER (260)
    LESS (261)
    GREATER (262)
    EQUAL (263)
    IF (264) 36 37
    FOR (265) 34
    ELSE (266) 37
    WHILE (267) 35
    BREAK (268)
    CONTINUE (269)
    CASE (270)
    DEFAULT (271)
    SWITCH (272)
    DO (273)
    RETURN (274) 38
    INCOP (275) 62
    DECOP (276) 63
    ASSIGNOP (277) 45
    LOGICNOT (278)
    NOT (279) 55
    LPAREN (280) 7 8 10 12 34 35 36 37 39 58 59
    RPAREN (281) 7 8 10 12 34 35 36 37 39 58 59
    LCURL (282) 17 18
    RCURL (283) 17 18
    LTHIRD (284) 25 27 43
    RTHIRD (285) 25 27 43
    COMMA (286) 13 14 24 25 66
    SEMICOLON (287) 7 8 19 38 39 40 41
    COLON (288)
    PRINTLN (289) 39
    INT (290) 20
    FLOAT (291) 21
    DOUBLE (292) 22
    CHAR (293)
    PLUS (294)
    MINUS (295)
    SLASH (296)
    ASTERISK (297)
    ADDOP <symbolInfo> (298) 51 54
    MULOP <symbolInfo> (299) 53
    RELOP <symbolInfo> (300) 49
    BITOP <symbolInfo> (301)
    LOGICOP <symbolInfo> (302) 47
    ID <symbolInfo> (303) 7 8 10 12 13 15 24 25 26 27 39 42 43 58
    CONST_CHAR <symbolInfo> (304)
    CONST_INT <symbolInfo> (305) 25 27 60
    CONST_FLOAT <symbolInfo> (306) 61
    LOWER_THAN_ELSE (307)


Nonterminals, with rules where they appear

    $accept (53)
        on left: 0
    start <symbolInfo> (54)
        on left: 1
        on right: 0
    program <symbolInfo> (55)
        on left: 2 3
        on right: 1 2
    unit <symbolInfo> (56)
        on left: 4 5 6
        on right: 2 3
    function_declaration <symbolInfo> (57)
        on left: 7 8
        on right: 5
    function_definition <symbolInfo> (58)
        on left: 10 12
        on right: 6
    $@1 (59)
        on left: 9
        on right: 10
    $@2 (60)
        on left: 11
        on right: 12
    parameter_list <symbolInfo> (61)
        on left: 13 14 15 16
        on right: 7 10 13 14
    compound_statement <symbolInfo> (62)
        on left: 17 18
        on right: 10 12 33
    variable_declaration <symbolInfo> (63)
        on left: 19
        on right: 4 30
    type_specifier <symbolInfo> (64)
        on left: 20 21 22 23
        on right: 7 8 10 12 13 14 15 16 19
    declaration_list <symbolInfo> (65)
        on left: 24 25 26 27
        on right: 19 24 25
    statement_list <symbolInfo> (66)
        on left: 28 29
        on right: 17 29
    statement <symbolInfo> (67)
        on left: 30 31 33 34 35 36 37 38 39
        on right: 28 29 34 35 36 37
    $@3 (68)
        on left: 32
        on right: 33
    expression_statement <symbolInfo> (69)
        on left: 40 41
        on right: 31 34
    variable <symbolInfo> (70)
        on left: 42 43
        on right: 45 57 62 63
    expression <symbolInfo> (71)
        on left: 44 45
        on right: 34 35 36 37 38 41 43 59
    logic_expression <symbolInfo> (72)
        on left: 46 47
        on right: 44 45 66 67
    rel_expression <symbolInfo> (73)
        on left: 48 49
        on right: 46 47
    simple_expression <symbolInfo> (74)
        on left: 50 51
        on right: 48 49 51
    term <symbolInfo> (75)
        on left: 52 53
        on right: 50 51 53
    unary_expression <symbolInfo> (76)
        on left: 54 55 56
        on right: 52 53 54 55
    factor <symbolInfo> (77)
        on left: 57 58 59 60 61 62 63
        on right: 56
    argument_list <symbolInfo> (78)
        on left: 64 65
        on right: 58
    arguments <symbolInfo> (79)
        on left: 66 67
        on right: 64 66


State 0

    0 $accept: • start $end

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    DOUBLE  shift, and go to state 4

    start                 go to state 5
    program               go to state 6
    unit                  go to state 7
    function_declaration  go to state 8
    function_definition   go to state 9
    variable_declaration  go to state 10
    type_specifier        go to state 11


State 1

   23 type_specifier: VOID •

    $default  reduce using rule 23 (type_specifier)


State 2

   20 type_specifier: INT •

    $default  reduce using rule 20 (type_specifier)


State 3

   21 type_specifier: FLOAT •

    $default  reduce using rule 21 (type_specifier)


State 4

   22 type_specifier: DOUBLE •

    $default  reduce using rule 22 (type_specifier)


State 5

    0 $accept: start • $end

    $end  shift, and go to state 12


State 6

    1 start: program •
    2 program: program • unit

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    DOUBLE  shift, and go to state 4

    $default  reduce using rule 1 (start)

    unit                  go to state 13
    function_declaration  go to state 8
    function_definition   go to state 9
    variable_declaration  go to state 10
    type_specifier        go to state 11


State 7

    3 program: unit •

    $default  reduce using rule 3 (program)


State 8

    5 unit: function_declaration •

    $default  reduce using rule 5 (unit)


State 9

    6 unit: function_definition •

    $default  reduce using rule 6 (unit)


State 10

    4 unit: variable_declaration •

    $default  reduce using rule 4 (unit)


State 11

    7 function_declaration: type_specifier • ID LPAREN parameter_list RPAREN SEMICOLON
    8                     | type_specifier • ID LPAREN RPAREN SEMICOLON
   10 function_definition: type_specifier • ID LPAREN parameter_list RPAREN $@1 compound_statement
   12                    | type_specifier • ID LPAREN RPAREN $@2 compound_statement
   19 variable_declaration: type_specifier • declaration_list SEMICOLON

    ID  shift, and go to state 14

    declaration_list  go to state 15


State 12

    0 $accept: start $end •

    $default  accept


State 13

    2 program: program unit •

    $default  reduce using rule 2 (program)


State 14

    7 function_declaration: type_specifier ID • LPAREN parameter_list RPAREN SEMICOLON
    8                     | type_specifier ID • LPAREN RPAREN SEMICOLON
   10 function_definition: type_specifier ID • LPAREN parameter_list RPAREN $@1 compound_statement
   12                    | type_specifier ID • LPAREN RPAREN $@2 compound_statement
   26 declaration_list: ID •
   27                 | ID • LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 16
    LTHIRD  shift, and go to state 17

    $default  reduce using rule 26 (declaration_list)


State 15

   19 variable_declaration: type_specifier declaration_list • SEMICOLON
   24 declaration_list: declaration_list • COMMA ID
   25                 | declaration_list • COMMA ID LTHIRD CONST_INT RTHIRD

    COMMA      shift, and go to state 18
    SEMICOLON  shift, and go to state 19


State 16

    7 function_declaration: type_specifier ID LPAREN • parameter_list RPAREN SEMICOLON
    8                     | type_specifier ID LPAREN • RPAREN SEMICOLON
   10 function_definition: type_specifier ID LPAREN • parameter_list RPAREN $@1 compound_statement
   12                    | type_specifier ID LPAREN • RPAREN $@2 compound_statement

    VOID    shift, and go to state 1
    RPAREN  shift, and go to state 20
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    DOUBLE  shift, and go to state 4

    parameter_list  go to state 21
    type_specifier  go to state 22


State 17

   27 declaration_list: ID LTHIRD • CONST_INT RTHIRD

    CONST_INT  shift, and go to state 23


State 18

   24 declaration_list: declaration_list COMMA • ID
   25                 | declaration_list COMMA • ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 24


State 19

   19 variable_declaration: type_specifier declaration_list SEMICOLON •

    $default  reduce using rule 19 (variable_declaration)


State 20

    8 function_declaration: type_specifier ID LPAREN RPAREN • SEMICOLON
   12 function_definition: type_specifier ID LPAREN RPAREN • $@2 compound_statement

    SEMICOLON  shift, and go to state 25

    $default  reduce using rule 11 ($@2)

    $@2  go to state 26


State 21

    7 function_declaration: type_specifier ID LPAREN parameter_list • RPAREN SEMICOLON
   10 function_definition: type_specifier ID LPAREN parameter_list • RPAREN $@1 compound_statement
   13 parameter_list: parameter_list • COMMA type_specifier ID
   14               | parameter_list • COMMA type_specifier

    RPAREN  shift, and go to state 27
    COMMA   shift, and go to state 28


State 22

   15 parameter_list: type_specifier • ID
   16               | type_specifier •

    ID  shift, and go to state 29

    $default  reduce using rule 16 (parameter_list)


State 23

   27 declaration_list: ID LTHIRD CONST_INT • RTHIRD

    RTHIRD  shift, and go to state 30


State 24

   24 declaration_list: declaration_list COMMA ID •
   25                 | declaration_list COMMA ID • LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 31

    $default  reduce using rule 24 (declaration_list)


State 25

    8 function_declaration: type_specifier ID LPAREN RPAREN SEMICOLON •

    $default  reduce using rule 8 (function_declaration)


State 26

   12 function_definition: type_specifier ID LPAREN RPAREN $@2 • compound_statement

    LCURL  shift, and go to state 32

    compound_statement  go to state 33


State 27

    7 function_declaration: type_specifier ID LPAREN parameter_list RPAREN • SEMICOLON
   10 function_definition: type_specifier ID LPAREN parameter_list RPAREN • $@1 compound_statement

    SEMICOLON  shift, and go to state 34

    $default  reduce using rule 9 ($@1)

    $@1  go to state 35


State 28

   13 parameter_list: parameter_list COMMA • type_specifier ID
   14               | parameter_list COMMA • type_specifier

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    DOUBLE  shift, and go to state 4

    type_specifier  go to state 36


State 29

   15 parameter_list: type_specifier ID •

    $default  reduce using rule 15 (parameter_list)


State 30

   27 declaration_list: ID LTHIRD CONST_INT RTHIRD •

    $default  reduce using rule 27 (declaration_list)


State 31

   25 declaration_list: declaration_list COMMA ID LTHIRD • CONST_INT RTHIRD

    CONST_INT  shift, and go to state 37


State 32

   17 compound_statement: LCURL • statement_list RCURL
   18                   | LCURL • RCURL

    VOID         shift, and go to state 1
    IF           shift, and go to state 38
    FOR          shift, and go to state 39
    WHILE        shift, and go to state 40
    RETURN       shift, and go to state 41
    NOT          shift, and go to state 42
    LPAREN       shift, and go to state 43
    RCURL        shift, and go to state 44
    SEMICOLON    shift, and go to state 45
    PRINTLN      shift, and go to state 46
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    DOUBLE       shift, and go to state 4
    ADDOP        shift, and go to state 47
    ID           shift, and go to state 48
    CONST_INT    shift, and go to state 49
    CONST_FLOAT  shift, and go to state 50

    $default  reduce using rule 32 ($@3)

    variable_declaration  go to state 51
    type_specifier        go to state 52
    statement_list        go to state 53
    statement             go to state 54
    $@3                   go to state 55
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64


State 33

   12 function_definition: type_specifier ID LPAREN RPAREN $@2 compound_statement •

    $default  reduce using rule 12 (function_definition)


State 34

    7 function_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON •

    $default  reduce using rule 7 (function_declaration)


State 35

   10 function_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 • compound_statement

    LCURL  shift, and go to state 32

    compound_statement  go to state 65


State 36

   13 parameter_list: parameter_list COMMA type_specifier • ID
   14               | parameter_list COMMA type_specifier •

    ID  shift, and go to state 66

    $default  reduce using rule 14 (parameter_list)


State 37

   25 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT • RTHIRD

    RTHIRD  shift, and go to state 67


State 38

   36 statement: IF • LPAREN expression RPAREN statement
   37          | IF • LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 68


State 39

   34 statement: FOR • LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 69


State 40

   35 statement: WHILE • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 70


State 41

   38 statement: RETURN • expression SEMICOLON

    NOT          shift, and go to state 42
    LPAREN       shift, and go to state 43
    ADDOP        shift, and go to state 47
    ID           shift, and go to state 48
    CONST_INT    shift, and go to state 49
    CONST_FLOAT  shift, and go to state 50

    variable           go to state 57
    expression         go to state 71
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 42

   55 unary_expression: NOT • unary_expression

    NOT          shift, and go to state 42
    LPAREN       shift, and go to state 43
    ADDOP        shift, and go to state 47
    ID           shift, and go to state 48
    CONST_INT    shift, and go to state 49
    CONST_FLOAT  shift, and go to state 50

    variable          go to state 72
    unary_expression  go to state 73
    factor            go to state 64


State 43

   59 factor: LPAREN • expression RPAREN

    NOT          shift, and go to state 42
    LPAREN       shift, and go to state 43
    ADDOP        shift, and go to state 47
    ID           shift, and go to state 48
    CONST_INT    shift, and go to state 49
    CONST_FLOAT  shift, and go to state 50

    variable           go to state 57
    expression         go to state 74
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 44

   18 compound_statement: LCURL RCURL •

    $default  reduce using rule 18 (compound_statement)


State 45

   40 expression_statement: SEMICOLON •

    $default  reduce using rule 40 (expression_statement)


State 46

   39 statement: PRINTLN • LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 75


State 47

   54 unary_expression: ADDOP • unary_expression

    NOT          shift, and go to state 42
    LPAREN       shift, and go to state 43
    ADDOP        shift, and go to state 47
    ID           shift, and go to state 48
    CONST_INT    shift, and go to state 49
    CONST_FLOAT  shift, and go to state 50

    variable          go to state 72
    unary_expression  go to state 76
    factor            go to state 64


State 48

   42 variable: ID •
   43         | ID • LTHIRD expression RTHIRD
   58 factor: ID • LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 77
    LTHIRD  shift, and go to state 78

    $default  reduce using rule 42 (variable)


State 49

   60 factor: CONST_INT •

    $default  reduce using rule 60 (factor)


State 50

   61 factor: CONST_FLOAT •

    $default  reduce using rule 61 (factor)


State 51

   30 statement: variable_declaration •

    $default  reduce using rule 30 (statement)


State 52

   19 variable_declaration: type_specifier • declaration_list SEMICOLON

    ID  shift, and go to state 79

    declaration_list  go to state 15


State 53

   17 compound_statement: LCURL statement_list • RCURL
   29 statement_list: statement_list • statement

    VOID         shift, and go to state 1
    IF           shift, and go to state 38
    FOR          shift, and go to state 39
    WHILE        shift, and go to state 40
    RETURN       shift, and go to state 41
    NOT          shift, and go to state 42
    LPAREN       shift, and go to state 43
    RCURL        shift, and go to state 80
    SEMICOLON    shift, and go to state 45
    PRINTLN      shift, and go to state 46
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    DOUBLE       shift, and go to state 4
    ADDOP        shift, and go to state 47
    ID           shift, and go to state 48
    CONST_INT    shift, and go to state 49
    CONST_FLOAT  shift, and go to state 50

    $default  reduce using rule 32 ($@3)

    variable_declaration  go to state 51
    type_specifier        go to state 52
    statement             go to state 81
    $@3                   go to state 55
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64


State 54

   28 statement_list: statement •

    $default  reduce using rule 28 (statement_list)


State 55

   33 statement: $@3 • compound_statement

    LCURL  shift, and go to state 32

    compound_statement  go to state 82


State 56

   31 statement: expression_statement •

    $default  reduce using rule 31 (statement)


State 57

   45 expression: variable • ASSIGNOP logic_expression
   57 factor: variable •
   62       | variable • INCOP
   63       | variable • DECOP

    INCOP     shift, and go to state 83
    DECOP     shift, and go to state 84
    ASSIGNOP  shift, and go to state 85

    $default  reduce using rule 57 (factor)


State 58

   41 expression_statement: expression • SEMICOLON

    SEMICOLON  shift, and go to state 86


State 59

   44 expression: logic_expression •

    $default  reduce using rule 44 (expression)


State 60

   46 logic_expression: rel_expression •
   47                 | rel_expression • LOGICOP rel_expression

    LOGICOP  shift, and go to state 87

    $default  reduce using rule 46 (logic_expression)


State 61

   48 rel_expression: simple_expression •
   49               | simple_expression • RELOP simple_expression
   51 simple_expression: simple_expression • ADDOP term

    ADDOP  shift, and go to state 88
    RELOP  shift, and go to state 89

    $default  reduce using rule 48 (rel_expression)


State 62

   50 simple_expression: term •
   53 term: term • MULOP unary_expression

    MULOP  shift, and go to state 90

    $default  reduce using rule 50 (simple_expression)


State 63

   52 term: unary_expression •

    $default  reduce using rule 52 (term)


State 64

   56 unary_expression: factor •

    $default  reduce using rule 56 (unary_expression)


State 65

   10 function_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement •

    $default  reduce using rule 10 (function_definition)


State 66

   13 parameter_list: parameter_list COMMA type_specifier ID •

    $default  reduce using rule 13 (parameter_list)


State 67

   25 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD •

    $default  reduce using rule 25 (declaration_list)


State 68

   36 statement: IF LPAREN • expression RPAREN statement
   37          | IF LPAREN • expression RPAREN statement ELSE statement

    NOT          shift, and go to state 42
    LPAREN       shift, and go to state 43
    ADDOP        shift, and go to state 47
    ID           shift, and go to state 48
    CONST_INT    shift, and go to state 49
    CONST_FLOAT  shift, and go to state 50

    variable           go to state 57
    expression         go to state 91
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 69

   34 statement: FOR LPAREN • expression_statement expression_statement expression RPAREN statement

    NOT          shift, and go to state 42
    LPAREN       shift, and go to state 43
    SEMICOLON    shift, and go to state 45
    ADDOP        shift, and go to state 47
    ID           shift, and go to state 48
    CONST_INT    shift, and go to state 49
    CONST_FLOAT  shift, and go to state 50

    expression_statement  go to state 92
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64


State 70

   35 statement: WHILE LPAREN • expression RPAREN statement

    NOT          shift, and go to state 42
    LPAREN       shift, and go to state 43
    ADDOP        shift, and go to state 47
    ID           shift, and go to state 48
    CONST_INT    shift, and go to state 49
    CONST_FLOAT  shift, and go to state 50

    variable           go to state 57
    expression         go to state 93
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 71

   38 statement: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 94


State 72

   57 factor: variable •
   62       | variable • INCOP
   63       | variable • DECOP

    INCOP  shift, and go to state 83
    DECOP  shift, and go to state 84

    $default  reduce using rule 57 (factor)


State 73

   55 unary_expression: NOT unary_expression •

    $default  reduce using rule 55 (unary_expression)


State 74

   59 factor: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 95


State 75

   39 statement: PRINTLN LPAREN • ID RPAREN SEMICOLON

    ID  shift, and go to state 96


State 76

   54 unary_expression: ADDOP unary_expression •

    $default  reduce using rule 54 (unary_expression)


State 77

   58 factor: ID LPAREN • argument_list RPAREN

    NOT          shift, and go to state 42
    LPAREN       shift, and go to state 43
    ADDOP        shift, and go to state 47
    ID           shift, and go to state 48
    CONST_INT    shift, and go to state 49
    CONST_FLOAT  shift, and go to state 50

    $default  reduce using rule 65 (argument_list)

    variable           go to state 72
    logic_expression   go to state 97
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    argument_list      go to state 98
    arguments          go to state 99


State 78

   43 variable: ID LTHIRD • expression RTHIRD

    NOT          shift, and go to state 42
    LPAREN       shift, and go to state 43
    ADDOP        shift, and go to state 47
    ID           shift, and go to state 48
    CONST_INT    shift, and go to state 49
    CONST_FLOAT  shift, and go to state 50

    variable           go to state 57
    expression         go to state 100
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 79

   26 declaration_list: ID •
   27                 | ID • LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 17

    $default  reduce using rule 26 (declaration_list)


State 80

   17 compound_statement: LCURL statement_list RCURL •

    $default  reduce using rule 17 (compound_statement)


State 81

   29 statement_list: statement_list statement •

    $default  reduce using rule 29 (statement_list)


State 82

   33 statement: $@3 compound_statement •

    $default  reduce using rule 33 (statement)


State 83

   62 factor: variable INCOP •

    $default  reduce using rule 62 (factor)


State 84

   63 factor: variable DECOP •

    $default  reduce using rule 63 (factor)


State 85

   45 expression: variable ASSIGNOP • logic_expression

    NOT          shift, and go to state 42
    LPAREN       shift, and go to state 43
    ADDOP        shift, and go to state 47
    ID           shift, and go to state 48
    CONST_INT    shift, and go to state 49
    CONST_FLOAT  shift, and go to state 50

    variable           go to state 72
    logic_expression   go to state 101
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 86

   41 expression_statement: expression SEMICOLON •

    $default  reduce using rule 41 (expression_statement)


State 87

   47 logic_expression: rel_expression LOGICOP • rel_expression

    NOT          shift, and go to state 42
    LPAREN       shift, and go to state 43
    ADDOP        shift, and go to state 47
    ID           shift, and go to state 48
    CONST_INT    shift, and go to state 49
    CONST_FLOAT  shift, and go to state 50

    variable           go to state 72
    rel_expression     go to state 102
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 88

   51 simple_expression: simple_expression ADDOP • term

    NOT          shift, and go to state 42
    LPAREN       shift, and go to state 43
    ADDOP        shift, and go to state 47
    ID           shift, and go to state 48
    CONST_INT    shift, and go to state 49
    CONST_FLOAT  shift, and go to state 50

    variable          go to state 72
    term              go to state 103
    unary_expression  go to state 63
    factor            go to state 64


State 89

   49 rel_expression: simple_expression RELOP • simple_expression

    NOT          shift, and go to state 42
    LPAREN       shift, and go to state 43
    ADDOP        shift, and go to state 47
    ID           shift, and go to state 48
    CONST_INT    shift, and go to state 49
    CONST_FLOAT  shift, and go to state 50

    variable           go to state 72
    simple_expression  go to state 104
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 90

   53 term: term MULOP • unary_expression

    NOT          shift, and go to state 42
    LPAREN       shift, and go to state 43
    ADDOP        shift, and go to state 47
    ID           shift, and go to state 48
    CONST_INT    shift, and go to state 49
    CONST_FLOAT  shift, and go to state 50

    variable          go to state 72
    unary_expression  go to state 105
    factor            go to state 64


State 91

   36 statement: IF LPAREN expression • RPAREN statement
   37          | IF LPAREN expression • RPAREN statement ELSE statement

    RPAREN  shift, and go to state 106


State 92

   34 statement: FOR LPAREN expression_statement • expression_statement expression RPAREN statement

    NOT          shift, and go to state 42
    LPAREN       shift, and go to state 43
    SEMICOLON    shift, and go to state 45
    ADDOP        shift, and go to state 47
    ID           shift, and go to state 48
    CONST_INT    shift, and go to state 49
    CONST_FLOAT  shift, and go to state 50

    expression_statement  go to state 107
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64


State 93

   35 statement: WHILE LPAREN expression • RPAREN statement

    RPAREN  shift, and go to state 108


State 94

   38 statement: RETURN expression SEMICOLON •

    $default  reduce using rule 38 (statement)


State 95

   59 factor: LPAREN expression RPAREN •

    $default  reduce using rule 59 (factor)


State 96

   39 statement: PRINTLN LPAREN ID • RPAREN SEMICOLON

    RPAREN  shift, and go to state 109


State 97

   67 arguments: logic_expression •

    $default  reduce using rule 67 (arguments)


State 98

   58 factor: ID LPAREN argument_list • RPAREN

    RPAREN  shift, and go to state 110


State 99

   64 argument_list: arguments •
   66 arguments: arguments • COMMA logic_expression

    COMMA  shift, and go to state 111

    $default  reduce using rule 64 (argument_list)


State 100

   43 variable: ID LTHIRD expression • RTHIRD

    RTHIRD  shift, and go to state 112


State 101

   45 expression: variable ASSIGNOP logic_expression •

    $default  reduce using rule 45 (expression)


State 102

   47 logic_expression: rel_expression LOGICOP rel_expression •

    $default  reduce using rule 47 (logic_expression)


State 103

   51 simple_expression: simple_expression ADDOP term •
   53 term: term • MULOP unary_expression

    MULOP  shift, and go to state 90

    $default  reduce using rule 51 (simple_expression)


State 104

   49 rel_expression: simple_expression RELOP simple_expression •
   51 simple_expression: simple_expression • ADDOP term

    ADDOP  shift, and go to state 88

    $default  reduce using rule 49 (rel_expression)


State 105

   53 term: term MULOP unary_expression •

    $default  reduce using rule 53 (term)


State 106

   36 statement: IF LPAREN expression RPAREN • statement
   37          | IF LPAREN expression RPAREN • statement ELSE statement

    VOID         shift, and go to state 1
    IF           shift, and go to state 38
    FOR          shift, and go to state 39
    WHILE        shift, and go to state 40
    RETURN       shift, and go to state 41
    NOT          shift, and go to state 42
    LPAREN       shift, and go to state 43
    SEMICOLON    shift, and go to state 45
    PRINTLN      shift, and go to state 46
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    DOUBLE       shift, and go to state 4
    ADDOP        shift, and go to state 47
    ID           shift, and go to state 48
    CONST_INT    shift, and go to state 49
    CONST_FLOAT  shift, and go to state 50

    $default  reduce using rule 32 ($@3)

    variable_declaration  go to state 51
    type_specifier        go to state 52
    statement             go to state 113
    $@3                   go to state 55
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64


State 107

   34 statement: FOR LPAREN expression_statement expression_statement • expression RPAREN statement

    NOT          shift, and go to state 42
    LPAREN       shift, and go to state 43
    ADDOP        shift, and go to state 47
    ID           shift, and go to state 48
    CONST_INT    shift, and go to state 49
    CONST_FLOAT  shift, and go to state 50

    variable           go to state 57
    expression         go to state 114
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 108

   35 statement: WHILE LPAREN expression RPAREN • statement

    VOID         shift, and go to state 1
    IF           shift, and go to state 38
    FOR          shift, and go to state 39
    WHILE        shift, and go to state 40
    RETURN       shift, and go to state 41
    NOT          shift, and go to state 42
    LPAREN       shift, and go to state 43
    SEMICOLON    shift, and go to state 45
    PRINTLN      shift, and go to state 46
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    DOUBLE       shift, and go to state 4
    ADDOP        shift, and go to state 47
    ID           shift, and go to state 48
    CONST_INT    shift, and go to state 49
    CONST_FLOAT  shift, and go to state 50

    $default  reduce using rule 32 ($@3)

    variable_declaration  go to state 51
    type_specifier        go to state 52
    statement             go to state 115
    $@3                   go to state 55
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64


State 109

   39 statement: PRINTLN LPAREN ID RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 116


State 110

   58 factor: ID LPAREN argument_list RPAREN •

    $default  reduce using rule 58 (factor)


State 111

   66 arguments: arguments COMMA • logic_expression

    NOT          shift, and go to state 42
    LPAREN       shift, and go to state 43
    ADDOP        shift, and go to state 47
    ID           shift, and go to state 48
    CONST_INT    shift, and go to state 49
    CONST_FLOAT  shift, and go to state 50

    variable           go to state 72
    logic_expression   go to state 117
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 112

   43 variable: ID LTHIRD expression RTHIRD •

    $default  reduce using rule 43 (variable)


State 113

   36 statement: IF LPAREN expression RPAREN statement •
   37          | IF LPAREN expression RPAREN statement • ELSE statement

    ELSE  shift, and go to state 118

    $default  reduce using rule 36 (statement)


State 114

   34 statement: FOR LPAREN expression_statement expression_statement expression • RPAREN statement

    RPAREN  shift, and go to state 119


State 115

   35 statement: WHILE LPAREN expression RPAREN statement •

    $default  reduce using rule 35 (statement)


State 116

   39 statement: PRINTLN LPAREN ID RPAREN SEMICOLON •

    $default  reduce using rule 39 (statement)


State 117

   66 arguments: arguments COMMA logic_expression •

    $default  reduce using rule 66 (arguments)


State 118

   37 statement: IF LPAREN expression RPAREN statement ELSE • statement

    VOID         shift, and go to state 1
    IF           shift, and go to state 38
    FOR          shift, and go to state 39
    WHILE        shift, and go to state 40
    RETURN       shift, and go to state 41
    NOT          shift, and go to state 42
    LPAREN       shift, and go to state 43
    SEMICOLON    shift, and go to state 45
    PRINTLN      shift, and go to state 46
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    DOUBLE       shift, and go to state 4
    ADDOP        shift, and go to state 47
    ID           shift, and go to state 48
    CONST_INT    shift, and go to state 49
    CONST_FLOAT  shift, and go to state 50

    $default  reduce using rule 32 ($@3)

    variable_declaration  go to state 51
    type_specifier        go to state 52
    statement             go to state 120
    $@3                   go to state 55
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64


State 119

   34 statement: FOR LPAREN expression_statement expression_statement expression RPAREN • statement

    VOID         shift, and go to state 1
    IF           shift, and go to state 38
    FOR          shift, and go to state 39
    WHILE        shift, and go to state 40
    RETURN       shift, and go to state 41
    NOT          shift, and go to state 42
    LPAREN       shift, and go to state 43
    SEMICOLON    shift, and go to state 45
    PRINTLN      shift, and go to state 46
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    DOUBLE       shift, and go to state 4
    ADDOP        shift, and go to state 47
    ID           shift, and go to state 48
    CONST_INT    shift, and go to state 49
    CONST_FLOAT  shift, and go to state 50

    $default  reduce using rule 32 ($@3)

    variable_declaration  go to state 51
    type_specifier        go to state 52
    statement             go to state 121
    $@3                   go to state 55
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64


State 120

   37 statement: IF LPAREN expression RPAREN statement ELSE statement •

    $default  reduce using rule 37 (statement)


State 121

   34 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement •

    $default  reduce using rule 34 (statement)
